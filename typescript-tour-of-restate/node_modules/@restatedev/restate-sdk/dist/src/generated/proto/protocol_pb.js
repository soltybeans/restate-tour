"use strict";
// Copyright (c) 2023 - Restate Software, Inc., Restate GmbH
//
// This file is part of the Restate service protocol, which is
// released under the MIT license.
//
// You can find a copy of the license in file LICENSE in the root
// directory of this repository or package, or at
// https://github.com/restatedev/service-protocol/blob/main/LICENSE
Object.defineProperty(exports, "__esModule", { value: true });
exports.Empty = exports.Header = exports.Failure = exports.RunEntryMessage = exports.CompleteAwakeableEntryMessage = exports.AwakeableEntryMessage = exports.OneWayCallEntryMessage = exports.CallEntryMessage = exports.SleepEntryMessage = exports.CompletePromiseEntryMessage = exports.PeekPromiseEntryMessage = exports.GetPromiseEntryMessage = exports.GetStateKeysEntryMessage_StateKeys = exports.GetStateKeysEntryMessage = exports.ClearAllStateEntryMessage = exports.ClearStateEntryMessage = exports.SetStateEntryMessage = exports.GetStateEntryMessage = exports.OutputEntryMessage = exports.InputEntryMessage = exports.EndMessage = exports.EntryAckMessage = exports.ErrorMessage = exports.SuspensionMessage = exports.CompletionMessage = exports.StartMessage_StateEntry = exports.StartMessage = exports.ServiceProtocolVersion = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * Service protocol version.
 *
 * @generated from enum dev.restate.service.protocol.ServiceProtocolVersion
 */
var ServiceProtocolVersion;
(function (ServiceProtocolVersion) {
    /**
     * @generated from enum value: SERVICE_PROTOCOL_VERSION_UNSPECIFIED = 0;
     */
    ServiceProtocolVersion[ServiceProtocolVersion["SERVICE_PROTOCOL_VERSION_UNSPECIFIED"] = 0] = "SERVICE_PROTOCOL_VERSION_UNSPECIFIED";
    /**
     * initial service protocol version
     *
     * @generated from enum value: V1 = 1;
     */
    ServiceProtocolVersion[ServiceProtocolVersion["V1"] = 1] = "V1";
})(ServiceProtocolVersion = exports.ServiceProtocolVersion || (exports.ServiceProtocolVersion = {}));
// Retrieve enum metadata with: proto3.getEnumType(ServiceProtocolVersion)
protobuf_1.proto3.util.setEnumType(ServiceProtocolVersion, "dev.restate.service.protocol.ServiceProtocolVersion", [
    { no: 0, name: "SERVICE_PROTOCOL_VERSION_UNSPECIFIED" },
    { no: 1, name: "V1" },
]);
/**
 * Type: 0x0000 + 0
 *
 * @generated from message dev.restate.service.protocol.StartMessage
 */
class StartMessage extends protobuf_1.Message {
    /**
     * Unique id of the invocation. This id is unique across invocations and won't change when replaying the journal.
     *
     * @generated from field: bytes id = 1;
     */
    id = new Uint8Array(0);
    /**
     * Invocation id that can be used for logging.
     * The user can use this id to address this invocation in admin and status introspection apis.
     *
     * @generated from field: string debug_id = 2;
     */
    debugId = "";
    /**
     * @generated from field: uint32 known_entries = 3;
     */
    knownEntries = 0;
    /**
     * protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
     *
     * @generated from field: repeated dev.restate.service.protocol.StartMessage.StateEntry state_map = 4;
     */
    stateMap = [];
    /**
     * @generated from field: bool partial_state = 5;
     */
    partialState = false;
    /**
     * If this invocation has a key associated (e.g. for objects and workflows), then this key is filled in. Empty otherwise.
     *
     * @generated from field: string key = 6;
     */
    key = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.StartMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 2, name: "debug_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "known_entries", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
        { no: 4, name: "state_map", kind: "message", T: StartMessage_StateEntry, repeated: true },
        { no: 5, name: "partial_state", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 6, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new StartMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StartMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StartMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StartMessage, a, b);
    }
}
exports.StartMessage = StartMessage;
/**
 * @generated from message dev.restate.service.protocol.StartMessage.StateEntry
 */
class StartMessage_StateEntry extends protobuf_1.Message {
    /**
     * @generated from field: bytes key = 1;
     */
    key = new Uint8Array(0);
    /**
     * If value is an empty byte array,
     * then it means the value is empty and not "missing" (e.g. empty string).
     *
     * @generated from field: bytes value = 2;
     */
    value = new Uint8Array(0);
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.StartMessage.StateEntry";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 2, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    ]);
    static fromBinary(bytes, options) {
        return new StartMessage_StateEntry().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StartMessage_StateEntry().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StartMessage_StateEntry().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StartMessage_StateEntry, a, b);
    }
}
exports.StartMessage_StateEntry = StartMessage_StateEntry;
/**
 * Type: 0x0000 + 1
 *
 * @generated from message dev.restate.service.protocol.CompletionMessage
 */
class CompletionMessage extends protobuf_1.Message {
    /**
     * @generated from field: uint32 entry_index = 1;
     */
    entryIndex = 0;
    /**
     * @generated from oneof dev.restate.service.protocol.CompletionMessage.result
     */
    result = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.CompletionMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "entry_index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
        { no: 13, name: "empty", kind: "message", T: Empty, oneof: "result" },
        { no: 14, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
    ]);
    static fromBinary(bytes, options) {
        return new CompletionMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CompletionMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CompletionMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CompletionMessage, a, b);
    }
}
exports.CompletionMessage = CompletionMessage;
/**
 * Type: 0x0000 + 2
 * Implementations MUST send this message when suspending an invocation.
 *
 * @generated from message dev.restate.service.protocol.SuspensionMessage
 */
class SuspensionMessage extends protobuf_1.Message {
    /**
     * This list represents any of the entry_index the invocation is waiting on to progress.
     * The runtime will resume the invocation as soon as one of the given entry_index is completed.
     * This list MUST not be empty.
     * False positive, entry_indexes is a valid plural of entry_indices.
     * https://learn.microsoft.com/en-us/style-guide/a-z-word-list-term-collections/i/index-indexes-indices
     *
     * protolint:disable:this REPEATED_FIELD_NAMES_PLURALIZED
     *
     * @generated from field: repeated uint32 entry_indexes = 1;
     */
    entryIndexes = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.SuspensionMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "entry_indexes", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new SuspensionMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SuspensionMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SuspensionMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SuspensionMessage, a, b);
    }
}
exports.SuspensionMessage = SuspensionMessage;
/**
 * Type: 0x0000 + 3
 *
 * @generated from message dev.restate.service.protocol.ErrorMessage
 */
class ErrorMessage extends protobuf_1.Message {
    /**
     * The code can be any HTTP status code, as described https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml.
     * In addition, we define the following error codes that MAY be used by the SDK for better error reporting:
     * * JOURNAL_MISMATCH = 570, that is when the SDK cannot replay a journal due to the mismatch between the journal and the actual code.
     * * PROTOCOL_VIOLATION = 571, that is when the SDK receives an unexpected message or an expected message variant, given its state.
     *
     * @generated from field: uint32 code = 1;
     */
    code = 0;
    /**
     * Contains a concise error message, e.g. Throwable#getMessage() in Java.
     *
     * @generated from field: string message = 2;
     */
    message = "";
    /**
     * Contains a verbose error description, e.g. the exception stacktrace.
     *
     * @generated from field: string description = 3;
     */
    description = "";
    /**
     * Entry that caused the failure. This may be outside the current stored journal size.
     * If no specific entry caused the failure, the current replayed/processed entry can be used.
     *
     * @generated from field: optional uint32 related_entry_index = 4;
     */
    relatedEntryIndex;
    /**
     * Name of the entry that caused the failure.
     *
     * @generated from field: optional string related_entry_name = 5;
     */
    relatedEntryName;
    /**
     * Entry type.
     *
     * @generated from field: optional uint32 related_entry_type = 6;
     */
    relatedEntryType;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.ErrorMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "code", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
        { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "related_entry_index", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
        { no: 5, name: "related_entry_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
        { no: 6, name: "related_entry_type", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    ]);
    static fromBinary(bytes, options) {
        return new ErrorMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ErrorMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ErrorMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ErrorMessage, a, b);
    }
}
exports.ErrorMessage = ErrorMessage;
/**
 * Type: 0x0000 + 4
 *
 * @generated from message dev.restate.service.protocol.EntryAckMessage
 */
class EntryAckMessage extends protobuf_1.Message {
    /**
     * @generated from field: uint32 entry_index = 1;
     */
    entryIndex = 0;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.EntryAckMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "entry_index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    ]);
    static fromBinary(bytes, options) {
        return new EntryAckMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new EntryAckMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new EntryAckMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(EntryAckMessage, a, b);
    }
}
exports.EntryAckMessage = EntryAckMessage;
/**
 * Type: 0x0000 + 5
 * Implementations MUST send this message when the invocation lifecycle ends.
 *
 * @generated from message dev.restate.service.protocol.EndMessage
 */
class EndMessage extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.EndMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => []);
    static fromBinary(bytes, options) {
        return new EndMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new EndMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new EndMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(EndMessage, a, b);
    }
}
exports.EndMessage = EndMessage;
/**
 * Completable: No
 * Fallible: No
 * Type: 0x0400 + 0
 *
 * @generated from message dev.restate.service.protocol.InputEntryMessage
 */
class InputEntryMessage extends protobuf_1.Message {
    /**
     * @generated from field: repeated dev.restate.service.protocol.Header headers = 1;
     */
    headers = [];
    /**
     * @generated from field: bytes value = 14;
     */
    value = new Uint8Array(0);
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.InputEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "headers", kind: "message", T: Header, repeated: true },
        { no: 14, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new InputEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InputEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InputEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(InputEntryMessage, a, b);
    }
}
exports.InputEntryMessage = InputEntryMessage;
/**
 * Completable: No
 * Fallible: No
 * Type: 0x0400 + 1
 *
 * @generated from message dev.restate.service.protocol.OutputEntryMessage
 */
class OutputEntryMessage extends protobuf_1.Message {
    /**
     * @generated from oneof dev.restate.service.protocol.OutputEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.OutputEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 14, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new OutputEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OutputEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OutputEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(OutputEntryMessage, a, b);
    }
}
exports.OutputEntryMessage = OutputEntryMessage;
/**
 * Completable: Yes
 * Fallible: No
 * Type: 0x0800 + 0
 *
 * @generated from message dev.restate.service.protocol.GetStateEntryMessage
 */
class GetStateEntryMessage extends protobuf_1.Message {
    /**
     * @generated from field: bytes key = 1;
     */
    key = new Uint8Array(0);
    /**
     * @generated from oneof dev.restate.service.protocol.GetStateEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.GetStateEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 13, name: "empty", kind: "message", T: Empty, oneof: "result" },
        { no: 14, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new GetStateEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetStateEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetStateEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetStateEntryMessage, a, b);
    }
}
exports.GetStateEntryMessage = GetStateEntryMessage;
/**
 * Completable: No
 * Fallible: No
 * Type: 0x0800 + 1
 *
 * @generated from message dev.restate.service.protocol.SetStateEntryMessage
 */
class SetStateEntryMessage extends protobuf_1.Message {
    /**
     * @generated from field: bytes key = 1;
     */
    key = new Uint8Array(0);
    /**
     * @generated from field: bytes value = 3;
     */
    value = new Uint8Array(0);
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.SetStateEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 3, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new SetStateEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetStateEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetStateEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SetStateEntryMessage, a, b);
    }
}
exports.SetStateEntryMessage = SetStateEntryMessage;
/**
 * Completable: No
 * Fallible: No
 * Type: 0x0800 + 2
 *
 * @generated from message dev.restate.service.protocol.ClearStateEntryMessage
 */
class ClearStateEntryMessage extends protobuf_1.Message {
    /**
     * @generated from field: bytes key = 1;
     */
    key = new Uint8Array(0);
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.ClearStateEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new ClearStateEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClearStateEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClearStateEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClearStateEntryMessage, a, b);
    }
}
exports.ClearStateEntryMessage = ClearStateEntryMessage;
/**
 * Completable: No
 * Fallible: No
 * Type: 0x0800 + 3
 *
 * @generated from message dev.restate.service.protocol.ClearAllStateEntryMessage
 */
class ClearAllStateEntryMessage extends protobuf_1.Message {
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.ClearAllStateEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new ClearAllStateEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClearAllStateEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClearAllStateEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClearAllStateEntryMessage, a, b);
    }
}
exports.ClearAllStateEntryMessage = ClearAllStateEntryMessage;
/**
 * Completable: Yes
 * Fallible: No
 * Type: 0x0800 + 4
 *
 * @generated from message dev.restate.service.protocol.GetStateKeysEntryMessage
 */
class GetStateKeysEntryMessage extends protobuf_1.Message {
    /**
     * @generated from oneof dev.restate.service.protocol.GetStateKeysEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.GetStateKeysEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 14, name: "value", kind: "message", T: GetStateKeysEntryMessage_StateKeys, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new GetStateKeysEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetStateKeysEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetStateKeysEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetStateKeysEntryMessage, a, b);
    }
}
exports.GetStateKeysEntryMessage = GetStateKeysEntryMessage;
/**
 * @generated from message dev.restate.service.protocol.GetStateKeysEntryMessage.StateKeys
 */
class GetStateKeysEntryMessage_StateKeys extends protobuf_1.Message {
    /**
     * @generated from field: repeated bytes keys = 1;
     */
    keys = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.GetStateKeysEntryMessage.StateKeys";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "keys", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new GetStateKeysEntryMessage_StateKeys().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetStateKeysEntryMessage_StateKeys().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetStateKeysEntryMessage_StateKeys().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetStateKeysEntryMessage_StateKeys, a, b);
    }
}
exports.GetStateKeysEntryMessage_StateKeys = GetStateKeysEntryMessage_StateKeys;
/**
 * Completable: Yes
 * Fallible: No
 * Type: 0x0800 + 8
 *
 * @generated from message dev.restate.service.protocol.GetPromiseEntryMessage
 */
class GetPromiseEntryMessage extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from oneof dev.restate.service.protocol.GetPromiseEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.GetPromiseEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 14, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new GetPromiseEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetPromiseEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetPromiseEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetPromiseEntryMessage, a, b);
    }
}
exports.GetPromiseEntryMessage = GetPromiseEntryMessage;
/**
 * Completable: Yes
 * Fallible: No
 * Type: 0x0800 + 9
 *
 * @generated from message dev.restate.service.protocol.PeekPromiseEntryMessage
 */
class PeekPromiseEntryMessage extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from oneof dev.restate.service.protocol.PeekPromiseEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.PeekPromiseEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 13, name: "empty", kind: "message", T: Empty, oneof: "result" },
        { no: 14, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new PeekPromiseEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PeekPromiseEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PeekPromiseEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(PeekPromiseEntryMessage, a, b);
    }
}
exports.PeekPromiseEntryMessage = PeekPromiseEntryMessage;
/**
 * Completable: Yes
 * Fallible: No
 * Type: 0x0800 + A
 *
 * @generated from message dev.restate.service.protocol.CompletePromiseEntryMessage
 */
class CompletePromiseEntryMessage extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * The value to use to complete the promise
     *
     * @generated from oneof dev.restate.service.protocol.CompletePromiseEntryMessage.completion
     */
    completion = { case: undefined };
    /**
     * @generated from oneof dev.restate.service.protocol.CompletePromiseEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.CompletePromiseEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "completion_value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "completion" },
        { no: 3, name: "completion_failure", kind: "message", T: Failure, oneof: "completion" },
        { no: 13, name: "empty", kind: "message", T: Empty, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new CompletePromiseEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CompletePromiseEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CompletePromiseEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CompletePromiseEntryMessage, a, b);
    }
}
exports.CompletePromiseEntryMessage = CompletePromiseEntryMessage;
/**
 * Completable: Yes
 * Fallible: No
 * Type: 0x0C00 + 0
 *
 * @generated from message dev.restate.service.protocol.SleepEntryMessage
 */
class SleepEntryMessage extends protobuf_1.Message {
    /**
     * Wake up time.
     * The time is set as duration since UNIX Epoch.
     *
     * @generated from field: uint64 wake_up_time = 1;
     */
    wakeUpTime = protobuf_1.protoInt64.zero;
    /**
     * @generated from oneof dev.restate.service.protocol.SleepEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.SleepEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "wake_up_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 13, name: "empty", kind: "message", T: Empty, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new SleepEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SleepEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SleepEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SleepEntryMessage, a, b);
    }
}
exports.SleepEntryMessage = SleepEntryMessage;
/**
 * Completable: Yes
 * Fallible: Yes
 * Type: 0x0C00 + 1
 *
 * @generated from message dev.restate.service.protocol.CallEntryMessage
 */
class CallEntryMessage extends protobuf_1.Message {
    /**
     * @generated from field: string service_name = 1;
     */
    serviceName = "";
    /**
     * @generated from field: string handler_name = 2;
     */
    handlerName = "";
    /**
     * @generated from field: bytes parameter = 3;
     */
    parameter = new Uint8Array(0);
    /**
     * @generated from field: repeated dev.restate.service.protocol.Header headers = 4;
     */
    headers = [];
    /**
     * If this invocation has a key associated (e.g. for objects and workflows), then this key is filled in. Empty otherwise.
     *
     * @generated from field: string key = 5;
     */
    key = "";
    /**
     * @generated from oneof dev.restate.service.protocol.CallEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.CallEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "service_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "handler_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "parameter", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 4, name: "headers", kind: "message", T: Header, repeated: true },
        { no: 5, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 14, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new CallEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CallEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CallEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CallEntryMessage, a, b);
    }
}
exports.CallEntryMessage = CallEntryMessage;
/**
 * Completable: No
 * Fallible: Yes
 * Type: 0x0C00 + 2
 *
 * @generated from message dev.restate.service.protocol.OneWayCallEntryMessage
 */
class OneWayCallEntryMessage extends protobuf_1.Message {
    /**
     * @generated from field: string service_name = 1;
     */
    serviceName = "";
    /**
     * @generated from field: string handler_name = 2;
     */
    handlerName = "";
    /**
     * @generated from field: bytes parameter = 3;
     */
    parameter = new Uint8Array(0);
    /**
     * Time when this BackgroundInvoke should be executed.
     * The time is set as duration since UNIX Epoch.
     * If this value is not set, equal to 0, or past in time,
     * the runtime will execute this BackgroundInvoke as soon as possible.
     *
     * @generated from field: uint64 invoke_time = 4;
     */
    invokeTime = protobuf_1.protoInt64.zero;
    /**
     * @generated from field: repeated dev.restate.service.protocol.Header headers = 5;
     */
    headers = [];
    /**
     * If this invocation has a key associated (e.g. for objects and workflows), then this key is filled in. Empty otherwise.
     *
     * @generated from field: string key = 6;
     */
    key = "";
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.OneWayCallEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "service_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "handler_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "parameter", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 4, name: "invoke_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 5, name: "headers", kind: "message", T: Header, repeated: true },
        { no: 6, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new OneWayCallEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OneWayCallEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OneWayCallEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(OneWayCallEntryMessage, a, b);
    }
}
exports.OneWayCallEntryMessage = OneWayCallEntryMessage;
/**
 * Completable: Yes
 * Fallible: No
 * Type: 0x0C00 + 3
 * Awakeables are addressed by an identifier exposed to the user. See the spec for more details.
 *
 * @generated from message dev.restate.service.protocol.AwakeableEntryMessage
 */
class AwakeableEntryMessage extends protobuf_1.Message {
    /**
     * @generated from oneof dev.restate.service.protocol.AwakeableEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.AwakeableEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 14, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new AwakeableEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AwakeableEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AwakeableEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AwakeableEntryMessage, a, b);
    }
}
exports.AwakeableEntryMessage = AwakeableEntryMessage;
/**
 * Completable: No
 * Fallible: Yes
 * Type: 0x0C00 + 4
 *
 * @generated from message dev.restate.service.protocol.CompleteAwakeableEntryMessage
 */
class CompleteAwakeableEntryMessage extends protobuf_1.Message {
    /**
     * Identifier of the awakeable. See the spec for more details.
     *
     * @generated from field: string id = 1;
     */
    id = "";
    /**
     * @generated from oneof dev.restate.service.protocol.CompleteAwakeableEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.CompleteAwakeableEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 14, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new CompleteAwakeableEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CompleteAwakeableEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CompleteAwakeableEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CompleteAwakeableEntryMessage, a, b);
    }
}
exports.CompleteAwakeableEntryMessage = CompleteAwakeableEntryMessage;
/**
 * Completable: No
 * Fallible: No
 * Type: 0x0C00 + 5
 * Flag: RequiresRuntimeAck
 *
 * @generated from message dev.restate.service.protocol.RunEntryMessage
 */
class RunEntryMessage extends protobuf_1.Message {
    /**
     * @generated from oneof dev.restate.service.protocol.RunEntryMessage.result
     */
    result = { case: undefined };
    /**
     * Entry name
     *
     * @generated from field: string name = 12;
     */
    name = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.RunEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 14, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
        { no: 15, name: "failure", kind: "message", T: Failure, oneof: "result" },
        { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new RunEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RunEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RunEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RunEntryMessage, a, b);
    }
}
exports.RunEntryMessage = RunEntryMessage;
/**
 * This failure object carries user visible errors,
 * e.g. invocation failure return value or failure result of an InvokeEntryMessage.
 *
 * @generated from message dev.restate.service.protocol.Failure
 */
class Failure extends protobuf_1.Message {
    /**
     * The code can be any HTTP status code, as described https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml.
     *
     * @generated from field: uint32 code = 1;
     */
    code = 0;
    /**
     * Contains a concise error message, e.g. Throwable#getMessage() in Java.
     *
     * @generated from field: string message = 2;
     */
    message = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.Failure";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "code", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
        { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Failure().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Failure().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Failure().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Failure, a, b);
    }
}
exports.Failure = Failure;
/**
 * @generated from message dev.restate.service.protocol.Header
 */
class Header extends protobuf_1.Message {
    /**
     * @generated from field: string key = 1;
     */
    key = "";
    /**
     * @generated from field: string value = 2;
     */
    value = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.Header";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Header().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Header().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Header().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Header, a, b);
    }
}
exports.Header = Header;
/**
 * @generated from message dev.restate.service.protocol.Empty
 */
class Empty extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.service.protocol.Empty";
    static fields = protobuf_1.proto3.util.newFieldList(() => []);
    static fromBinary(bytes, options) {
        return new Empty().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Empty().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Empty().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Empty, a, b);
    }
}
exports.Empty = Empty;
//# sourceMappingURL=protocol_pb.js.map