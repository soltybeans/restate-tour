import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
/**
 * Type: 0xFC00 + 2
 *
 * @generated from message dev.restate.sdk.javascript.CombinatorEntryMessage
 */
export declare class CombinatorEntryMessage extends Message<CombinatorEntryMessage> {
    /**
     * @generated from field: int32 combinator_id = 1;
     */
    combinatorId: number;
    /**
     * @generated from field: repeated int32 journal_entries_order = 2;
     */
    journalEntriesOrder: number[];
    constructor(data?: PartialMessage<CombinatorEntryMessage>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "dev.restate.sdk.javascript.CombinatorEntryMessage";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CombinatorEntryMessage;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CombinatorEntryMessage;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CombinatorEntryMessage;
    static equals(a: CombinatorEntryMessage | PlainMessage<CombinatorEntryMessage> | undefined, b: CombinatorEntryMessage | PlainMessage<CombinatorEntryMessage> | undefined): boolean;
}
//# sourceMappingURL=javascript_pb.d.ts.map