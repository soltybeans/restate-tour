"use strict";
//
// Copyright (c) 2023-2024 - Restate Software, Inc., Restate GmbH
//
// This file is part of the Restate SDK for Node.js/TypeScript,
// which is released under the MIT license.
//
// You can find a copy of the license in file LICENSE in the root
// directory of this repository or package, or at
// https://github.com/restatedev/sdk-typescript/blob/main/LICENSE
Object.defineProperty(exports, "__esModule", { value: true });
exports.CombinatorEntryMessage = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * Type: 0xFC00 + 2
 *
 * @generated from message dev.restate.sdk.javascript.CombinatorEntryMessage
 */
class CombinatorEntryMessage extends protobuf_1.Message {
    /**
     * @generated from field: int32 combinator_id = 1;
     */
    combinatorId = 0;
    /**
     * @generated from field: repeated int32 journal_entries_order = 2;
     */
    journalEntriesOrder = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "dev.restate.sdk.javascript.CombinatorEntryMessage";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "combinator_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 2, name: "journal_entries_order", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new CombinatorEntryMessage().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CombinatorEntryMessage().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CombinatorEntryMessage().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CombinatorEntryMessage, a, b);
    }
}
exports.CombinatorEntryMessage = CombinatorEntryMessage;
//# sourceMappingURL=javascript_pb.js.map