"use strict";
/*
 * Copyright (c) 2023-2024 - Restate Software, Inc., Restate GmbH
 *
 * This file is part of the Restate SDK for Node.js/TypeScript,
 * which is released under the MIT license.
 *
 * You can find a copy of the license in file LICENSE in the root
 * directory of this repository or package, or at
 * https://github.com/restatedev/sdk-typescript/blob/main/LICENSE
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.headerValue = exports.validateRequestSignature = void 0;
const v1_1 = require("./v1");
const SIGNATURE_SCHEME_HEADER = "x-restate-signature-scheme";
async function validateRequestSignature(keySet, path, headers) {
    const scheme = headerValue(SIGNATURE_SCHEME_HEADER, headers) ?? "unsigned";
    switch (scheme) {
        case "unsigned":
            return {
                valid: false,
                scheme: "unsigned",
                error: new Error("request has no identity"),
            };
        case v1_1.SCHEME_V1:
            return await (0, v1_1.validateV1)(keySet, path, headers);
        default:
            throw new Error("Unexpected signature scheme: known schemes are 'unsigned', 'v1'");
    }
}
exports.validateRequestSignature = validateRequestSignature;
function headerValue(key, headers) {
    if (!headers[key]) {
        return null;
    }
    if (typeof headers[key] !== "string") {
        throw new Error(`Unexpected multi-valued header ${key}`);
    }
    if (!headers[key]?.length) {
        throw new Error(`Unexpected empty valued header ${key}`);
    }
    return headers[key];
}
exports.headerValue = headerValue;
//# sourceMappingURL=validate.js.map